{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","_this","setState","target","value","props","placeholder","type","onChange","this","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onSubmit","preventDefault","onItemAdded","onLabelChange","App","maxId","todoData","deleteItem","index","findIndex","el","toConsumableArray","slice","addItem","text","newItem","createTodoItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread2","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.1ab431bf.chunk.js","sourcesContent":["import AppHeader from './app-header'\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css'\n\nconst AppHeader = ({toDo, done}) => {\n    return ( \n    <div className=\"app-header d-flex\">\n        <h1>My Todo List</h1>\n        <h2>{toDo} more to do, {done} done</h2>\n    </div>\n    );\n    \n};\nexport default AppHeader;","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React, { Component } from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n  state = {\n    term: ''\n  };\n  onSearchChange = e => {\n    this.setState({\n      term: e.target.value\n    });\n    this.props.onSearchChange(e.target.value);\n  };\n  render() {\n    return (\n      <input\n        className=\"search-input\"\n        placeholder=\"search\"\n        type=\"text\"\n        onChange={this.onSearchChange}\n        value={this.state.term}\n      />\n    );\n  }\n}\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;","import React, { Component } from 'react';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n        render() {\n\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\n        let classNames = 'todo-list-item';\n        if (done) {\n            classNames += ' done';\n        };\n        if(important) {\n            classNames += ' important';\n        }\n\n    \n        return (\n        <span className={classNames}>\n            <span \n                    className='todo-list-item-label'\n                    onClick={onToggleDone}>\n                    { label }\n            </span>\n    \n            <button type=\"button\"\n                    className=\"btn btn-outline-success btn-sm float-right\"\n                    onClick={onToggleImportant}> \n                    <i className=\"fa fa-exclamation\" />\n            </button> \n            <button type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\"\n                    onClick={onDeleted}> \n                    <i className=\"fa fa-trash-o\" />\n            </button> \n        </span>\n        );   \n    }\n}\n\n\n","import TodoList from './todo-list';\n\nexport default TodoList;"," import React from 'react';\n import TodoListItem from '../todo-list-item';\n import './todo-list.css';\n\n const TodoList = ({ todos, onDeleted,\n    onToggleImportant,\n    onToggleDone }) => {\n     const elements = todos.map((item) => {\n         const { id, ...itemProps } = item;\n         return (\n            <li key={id} className='list-group-item'>\n                <TodoListItem \n                { ...itemProps } \n                onDeleted={() => onDeleted(id)}\n                onToggleDone={() => onToggleDone(id)}\n                onToggleImportant={() => onToggleImportant(id)}\n                />\n            </li>\n         );\n     });\n    return (\n        <ul className='list-group todo-list'>\n            { elements }\n        </ul>\n    );\n};\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nexport default class ItemStatusFilter extends Component {\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' }\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n      return (\n        <button\n          type=\"button\"\n          className={`btn ${clazz}`}\n          key={name}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n    return <div className=\"btn-group\">{buttons}</div>;\n  }\n}\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: ''\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.state.label) {\n      this.props.onItemAdded(this.state.label);\n      this.setState({\n        label: ''\n      });\n    }\n  };\n  onLabelChange = e => {\n    this.setState({\n      label: e.target.value\n    });\n  };\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control col-md-8 item-add-form__input\"\n          onChange={this.onLabelChange}\n          placeholder=\"What need to be done?\"\n          value={this.state.label}\n        />\n        <button className=\"add-form-btn btn-outline-secondary btn col-md-4\">\n          Add item\n        </button>\n      </form>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;","import React, { Component } from \"react\";\n\nimport AppHeader from \"../app-header/\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport ItemAddForm from \"../item-add-form\";\nimport \"./app.css\";\n\nexport default class App extends Component {\n  maxId = 100;\n  state = {\n    todoData: [],\n    term: \"\",\n    filter: \"all\",\n  };\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++,\n    };\n  }\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const index = todoData.findIndex((el) => el.id === id);\n      const newArray = [\n        ...todoData.slice(0, index),\n        ...todoData.slice(index + 1),\n      ];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newItem];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n  toggleProperty(arr, id, propName) {\n    const index = arr.findIndex((el) => el.id === id);\n    const oldItem = arr[index];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n    return [...arr.slice(0, index), newItem, ...arr.slice(index + 1)];\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, \"important\"),\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, \"done\"),\n      };\n    });\n  };\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n  onSearchChange = (term) => {\n    this.setState({ term });\n  };\n  filter(items, filter) {\n    switch (filter) {\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter((item) => !item.done);\n      case \"done\":\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n  onFilterChange = (filter) => {\n    this.setState({\n      filter,\n    });\n  };\n  render() {\n    const { todoData, term, filter } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <SearchPanel onSearchChange={this.onSearchChange} />\n        <ItemStatusFilter\n          filter={filter}\n          onFilterChange={this.onFilterChange}\n        />\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\n\nReactDOM.render(<App />, document.getElementById('root'));    "],"sourceRoot":""}